var l=Object.defineProperty;var f=(t,s,e)=>s in t?l(t,s,{enumerable:!0,configurable:!0,writable:!0,value:e}):t[s]=e;var a=(t,s,e)=>f(t,typeof s!="symbol"?s+"":s,e);import{O as p}from"./BrCeWUXW.js";function h(t){const s=t.map(i=>JSON.stringify(i));return[...new Set(s)].map(i=>JSON.parse(i))}var c=(t=>(t.POPULAR_SERIES="POPULAR_SERIES",t.TOP_POPULAR_MOVIES="TOP_POPULAR_MOVIES",t.TOP_POPULAR_ALL="TOP_POPULAR_ALL",t))(c||{});function r(t){let s=t.ratingKinopoisk||t.ratingImdb||t.rating||0;return s==="null"&&(s=void 0),{kinopoiskId:t.kinopoiskId||t.filmId,countries:t.countries,genres:t.genres||[],rating:s,year:t.year||"no year",type:t.type||"unknown type",posterUrl:t.posterUrl||"",posterUrlPreview:t.posterUrlPreview||"",name:t.nameRu||t.nameEn||t.nameOriginal||"",favorite:!1,description:t.description}}function u(t){return{imageUrl:t==null?void 0:t.imageUrl,previewUrl:t==null?void 0:t.previewUrl}}function d(t){return{type:t==null?void 0:t.type,spoiler:t==null?void 0:t.spoiler,text:t==null?void 0:t.text}}class L{constructor(){a(this,"xKey","c20595a1-3d8c-4cbd-92eb-fd7b0fa75c67");a(this,"baseUrl","https://kinopoiskapiunofficial.tech")}async fetch(s,e,i){return await(await fetch(`${this.baseUrl}${s}`+new URLSearchParams(i),{method:e,headers:{"X-API-KEY":this.xKey,"Content-Type":"application/json"}})).json()}async getById(s){const e=await this.fetch(`/api/v2.2/films/${s}`,"GET");return r(e)}async getFacts(s){return(await this.fetch(`/api/v2.2/films/${s}/facts`,"GET")).items.map(i=>d(i))}async getByKeyword(s,e){const i=await this.fetch("/api/v2.1/films/search-by-keyword?","GET",{keyword:s,page:`${e}`});return{searchFilmsCountResult:i.searchFilmsCountResult,items:i.films.map(r)}}async getCollections(s,e=c.TOP_POPULAR_ALL){const i=await this.fetch("/api/v2.2/films/collections?","GET",{type:e,page:`${s}`});return console.log("collection -> ",i),{items:i.items.map(r),totalPages:i.totalPages}}async getMovieImages(s){const e=await this.fetch(`/api/v2.2/films/${s}/images?`,"GET",{type:"STILL",page:"1"});return e.items.length?e.items.map(u):[]}}class n{static get(s){const e=localStorage.getItem(s);return e?JSON.parse(e):null}static set(s,e){localStorage.setItem(s,JSON.stringify(e))}}const o=new L,y=p("main",{state:()=>({movieList:[],totalPages:0,searchList:[],searchListTotalPages:0,loaded:!1,favoriteList:n.get("favoriteList")||[]}),getters:{finalMovieList(t){const s=t.favoriteList.map(e=>e.kinopoiskId);return t.movieList.map(e=>s.includes(e.kinopoiskId)?{...e,favorite:!0}:{...e,favorite:!1})},finalSearchList(t){const s=t.favoriteList.map(e=>e.kinopoiskId);return t.searchList.map(e=>s.includes(e.kinopoiskId)?{...e,favorite:!0}:{...e,favorite:!1})}},actions:{findByName(t,s){s===1&&(this.$state.loaded=!0),o.getByKeyword(t,s).then(e=>{s===1?(this.$state.loaded=!1,this.$state.searchList=e.items,this.$state.searchListTotalPages=Math.ceil(e.searchFilmsCountResult/s)):this.$state.searchList=[...this.$state.searchList,...e.items]})},loadFilms(t,s){if(s===this.$state.totalPages)return;const e=s===1;e&&(this.$state.loaded=!0),o.getCollections(s,t).then(i=>{e?(this.$state.movieList=i.items,this.$state.totalPages=i.totalPages,this.$state.loaded=!1):this.$state.movieList=h([...this.$state.movieList,...i.items])})},favoriteToggle(t){t.favorite?this.$state.favoriteList=this.$state.favoriteList.filter(s=>s.kinopoiskId!==t.kinopoiskId):this.$state.favoriteList.push({...t,favorite:!0}),n.set("favoriteList",this.$state.favoriteList)},checkFavorite(t){return this.favoriteList.map(e=>e.kinopoiskId).includes(t)}}});export{L as K,n as L,c as M,y as u};
